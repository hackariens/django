name: Continuous Integration
on: [push]
jobs:
  environnement:
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(package-lock.json)"
      - name: Cache npm dependencies
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
  install:
    needs: environnement
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install npm dependencies
        run: npm install
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          cd apps
          pip install -r requirements.txt
  linter:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: linter readme.md
        run: make linter-readme
  docker:
    needs: install
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["7.4"]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: 'Docker swarm init'
        run: docker swarm init --default-addr-pool 10.20.0.0/16'
      - name: 'Create proxy network'
        run: make docker-create-network'
      - name: 'Show HELP'
        run: make help'
      - name: 'Build containers'
        run: make docker-deploy'
      - name: 'Check running stack'
        run: make docker-stack-ps'
      - name: 'Check running containers'
        run: make docker-service-ls'